/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CODEToken, CODETokenInterface } from "../CODEToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "treasurySupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "airdropSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_claimPeriodEnds",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "claimant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "MerkleRootChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimPeriodEnds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claimTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disableMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "isClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "additionalSupply",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sweep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c961012052600a805460ff60a01b1916600160a01b1790553480156200004a57600080fd5b506040516200217e3803806200217e8339810160408190526200006d91620003fc565b6040518060400160405280600d81526020016c446576656c6f7065722044414f60981b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280600d81526020016c446576656c6f7065722044414f60981b81525060405180604001604052806004815260200163434f444560e01b81525081600390805190602001906200010992919062000356565b5080516200011f90600490602084019062000356565b5050825160209384012082519284019290922060c083815260e08290524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818a018190528183019890985260608101959095526080808601939093523085830152805180860390920182529390920190925280519401939093209092526101005250620001b89050336200021c565b620001d784620001d185670de0b6b3a76400006200045f565b6200026e565b620001f030620001d184670de0b6b3a76400006200045f565b600a80546001600160a01b0319166001600160a01b0395909516949094179093555050600955620004d9565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620002c95760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620002dd919062000481565b90915550506001600160a01b038216600090815260208190526040812080548392906200030c90849062000481565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b82805462000364906200049c565b90600052602060002090601f016020900481019282620003885760008555620003d3565b82601f10620003a357805160ff1916838001178555620003d3565b82800160010185558215620003d3579182015b82811115620003d3578251825591602001919060010190620003b6565b50620003e1929150620003e5565b5090565b5b80821115620003e15760008155600101620003e6565b600080600080608085870312156200041357600080fd5b84516001600160a01b03811681146200042b57600080fd5b60208601516040870151606090970151919890975090945092505050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156200047c576200047c62000449565b500290565b6000821982111562000497576200049762000449565b500190565b600181811c90821680620004b157607f821691505b60208210811415620004d357634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e0516101005161012051611c55620005296000396000610c47015260006111fc0152600061124b01526000611226015260006111aa015260006111d30152611c556000f3fe608060405234801561001057600080fd5b50600436106101ae5760003560e01c80637cb64759116100ee5780639e34070f11610097578063a9059cbb11610071578063a9059cbb1461034e578063d505accf14610361578063dd62ed3e14610374578063f2fde38b146103ad57600080fd5b80639e34070f14610315578063a0712d6814610328578063a457c2d71461033b57600080fd5b80638da5cb5b116100c85780638da5cb5b146102e957806395d89b41146102fa5780639a114cb21461030257600080fd5b80637cb64759146102bb5780637e5cd5c1146102ce5780637ecebe00146102d657600080fd5b806335faa4161161015b57806361d027b31161013557806361d027b31461025657806366deac471461028157806370a082311461028a578063715018a6146102b357600080fd5b806335faa416146102315780633644e5151461023b578063395093511461024357600080fd5b806323b872dd1161018c57806323b872dd146102065780632eb4a7ab14610219578063313ce5671461022257600080fd5b806306fdde03146101b3578063095ea7b3146101d157806318160ddd146101f4575b600080fd5b6101bb6103c0565b6040516101c8919061192f565b60405180910390f35b6101e46101df366004611965565b610452565b60405190151581526020016101c8565b6002545b6040519081526020016101c8565b6101e461021436600461198f565b610468565b6101f860085481565b604051601281526020016101c8565b61023961052c565b005b6101f86105ff565b6101e4610251366004611965565b61060e565b600a54610269906001600160a01b031681565b6040516001600160a01b0390911681526020016101c8565b6101f860095481565b6101f86102983660046119cb565b6001600160a01b031660009081526020819052604090205490565b61023961064a565b6102396102c93660046119e6565b6106ae565b610239610793565b6101f86102e43660046119cb565b610817565b6006546001600160a01b0316610269565b6101bb610837565b6102396103103660046119ff565b610846565b6101e46103233660046119e6565b610a2b565b6102396103363660046119e6565b610a4e565b6101e4610349366004611965565b610b35565b6101e461035c366004611965565b610be6565b61023961036f366004611a7e565b610bf3565b6101f8610382366004611af1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102396103bb3660046119cb565b610d57565b6060600380546103cf90611b24565b80601f01602080910402602001604051908101604052809291908181526020018280546103fb90611b24565b80156104485780601f1061041d57610100808354040283529160200191610448565b820191906000526020600020905b81548152906001019060200180831161042b57829003601f168201915b5050505050905090565b600061045f338484610e36565b50600192915050565b6000610475848484610f8e565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156105145760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6105218533858403610e36565b506001949350505050565b6006546001600160a01b031633146105865760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161050b565b60095442116105d75760405162461bcd60e51b815260206004820181905260248201527f434f44453a20436c61696d20706572696f64206e6f742079657420656e646564604482015260640161050b565b600a54306000818152602081905260409020546105fd926001600160a01b031690610f8e565b565b60006106096111a6565b905090565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161045f918590610645908690611b6f565b610e36565b6006546001600160a01b031633146106a45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161050b565b6105fd6000611299565b6006546001600160a01b031633146107085760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161050b565b600854156107585760405162461bcd60e51b815260206004820152601d60248201527f434f44453a204d65726b6c6520726f6f7420616c726561647920736574000000604482015260640161050b565b60088190556040518181527f1b930366dfeaa7eb3b325021e4ae81e36527063452ee55b86c95f85b36f4c31c9060200160405180910390a150565b6006546001600160a01b031633146107ed5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161050b565b600a80547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b6001600160a01b0381166000908152600560205260408120545b92915050565b6060600480546103cf90611b24565b6040517fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003360601b166020820152603481018490526000906054016040516020818303038152906040528051906020012090506000806108dd858580806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506008549150869050611303565b915091508161092e5760405162461bcd60e51b815260206004820152601b60248201527f434f44453a2056616c69642070726f6f662072657175697265642e0000000000604482015260640161050b565b61093781610a2b565b156109845760405162461bcd60e51b815260206004820152601d60248201527f434f44453a20546f6b656e7320616c726561647920636c61696d65642e000000604482015260640161050b565b6109c46040518060400160405280601f81526020017f547279696e6720746f20636c61696d20257320746f6b656e7320746f2025730081525087336113d1565b600881901c60009081526007602052604090208054600160ff84161b17905560405186815233907f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d49060200160405180910390a2610a23303388610f8e565b505050505050565b600881901c600090815260076020526040812054600160ff84161b161515610831565b6006546001600160a01b03163314610aa85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161050b565b600a5474010000000000000000000000000000000000000000900460ff161515600114610b175760405162461bcd60e51b815260206004820152601b60248201527f4e6f206e657720746f6b656e732063616e206265206d696e7465640000000000604482015260640161050b565b610b3233610b2d83670de0b6b3a7640000611b87565b61144b565b50565b3360009081526001602090815260408083206001600160a01b038616845290915281205482811015610bcf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161050b565b610bdc3385858403610e36565b5060019392505050565b600061045f338484610f8e565b83421115610c435760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161050b565b60007f0000000000000000000000000000000000000000000000000000000000000000888888610c728c61152a565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610ccd82611552565b90506000610cdd828787876115bb565b9050896001600160a01b0316816001600160a01b031614610d405760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161050b565b610d4b8a8a8a610e36565b50505050505050505050565b6006546001600160a01b03163314610db15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161050b565b6001600160a01b038116610e2d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161050b565b610b3281611299565b6001600160a01b038316610eb15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161050b565b6001600160a01b038216610f2d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161050b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831661100a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161050b565b6001600160a01b0382166110865760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161050b565b6001600160a01b038316600090815260208190526040902054818110156111155760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161050b565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061114c908490611b6f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161119891815260200190565b60405180910390a350505050565b60007f00000000000000000000000000000000000000000000000000000000000000004614156111f557507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b600680546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000808281805b87518110156113c55761131e600283611b87565b9150600088828151811061133457611334611ba6565b602002602001015190508084116113765760408051602081018690529081018290526060016040516020818303038152906040528051906020012093506113b2565b60408051602081018390529081018590526060016040516020818303038152906040528051906020012093506001836113af9190611b6f565b92505b50806113bd81611bbc565b91505061130a565b50941495939450505050565b6114468383836040516024016113e993929190611bd7565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fe3849f79000000000000000000000000000000000000000000000000000000001790526115e3565b505050565b6001600160a01b0382166114a15760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161050b565b80600260008282546114b39190611b6f565b90915550506001600160a01b038216600090815260208190526040812080548392906114e0908490611b6f565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b600061083161155f6111a6565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006115cc87878787611604565b915091506115d9816116f1565b5095945050505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561163b57506000905060036116e8565b8460ff16601b1415801561165357508460ff16601c14155b1561166457506000905060046116e8565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156116b8573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166116e1576000600192509250506116e8565b9150600090505b94509492505050565b600081600481111561170557611705611c09565b141561170e5750565b600181600481111561172257611722611c09565b14156117705760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161050b565b600281600481111561178457611784611c09565b14156117d25760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161050b565b60038160048111156117e6576117e6611c09565b141561185a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161050b565b600481600481111561186e5761186e611c09565b1415610b325760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161050b565b6000815180845260005b81811015611908576020818501810151868301820152016118ec565b8181111561191a576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061194260208301846118e2565b9392505050565b80356001600160a01b038116811461196057600080fd5b919050565b6000806040838503121561197857600080fd5b61198183611949565b946020939093013593505050565b6000806000606084860312156119a457600080fd5b6119ad84611949565b92506119bb60208501611949565b9150604084013590509250925092565b6000602082840312156119dd57600080fd5b61194282611949565b6000602082840312156119f857600080fd5b5035919050565b600080600060408486031215611a1457600080fd5b83359250602084013567ffffffffffffffff80821115611a3357600080fd5b818601915086601f830112611a4757600080fd5b813581811115611a5657600080fd5b8760208260051b8501011115611a6b57600080fd5b6020830194508093505050509250925092565b600080600080600080600060e0888a031215611a9957600080fd5b611aa288611949565b9650611ab060208901611949565b95506040880135945060608801359350608088013560ff81168114611ad457600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611b0457600080fd5b611b0d83611949565b9150611b1b60208401611949565b90509250929050565b600181811c90821680611b3857607f821691505b6020821081141561154c57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115611b8257611b82611b59565b500190565b6000816000190483118215151615611ba157611ba1611b59565b500290565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611bd057611bd0611b59565b5060010190565b606081526000611bea60608301866118e2565b90508360208301526001600160a01b0383166040830152949350505050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220425cac4bcbe40785664632e478312feb00fa24e82a699019457039783a4746fb64736f6c63430008090033";

export class CODEToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _treasury: string,
    treasurySupply: BigNumberish,
    airdropSupply: BigNumberish,
    _claimPeriodEnds: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CODEToken> {
    return super.deploy(
      _treasury,
      treasurySupply,
      airdropSupply,
      _claimPeriodEnds,
      overrides || {}
    ) as Promise<CODEToken>;
  }
  getDeployTransaction(
    _treasury: string,
    treasurySupply: BigNumberish,
    airdropSupply: BigNumberish,
    _claimPeriodEnds: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _treasury,
      treasurySupply,
      airdropSupply,
      _claimPeriodEnds,
      overrides || {}
    );
  }
  attach(address: string): CODEToken {
    return super.attach(address) as CODEToken;
  }
  connect(signer: Signer): CODEToken__factory {
    return super.connect(signer) as CODEToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CODETokenInterface {
    return new utils.Interface(_abi) as CODETokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CODEToken {
    return new Contract(address, _abi, signerOrProvider) as CODEToken;
  }
}
